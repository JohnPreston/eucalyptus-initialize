---
# NCs init

- name: Set NC IFACE | Using VLANs
  set_fact: nc_iface="{{ 'ansible_' + "%s%d"|format(hostvars[item]['bridge_prefix'], hostvars[item]['vlan_tag']) }}"
  with_items:
  - "{{ groups.nc }}"
  when:
  - use_vlans
  - networking_mode == "EDGE" or networking_mode == "MANAGED-NOVLAN"
  tags:
  - initialization

- name: Set NC IFACE | Not Using VLANs
  set_fact: nc_iface="{{ 'ansible_' + "%s%d"|format(hostvars[item]['bridge_prefix'], hostvars[item]['bridge_id']) }}"
  with_items:
  - "{{ groups.nc }}"
  when:
  - not use_vlans
  - networking_mode == "EDGE" or networking_mode == "MANAGED-NOVLAN"
  tags:
  - initialization

- name: Set NC IFACE | MANAGED
  set_fact: nc_iface="{{ 'ansible_' + "%s"|format(hostvars[item]['vnet_private']) }}"
  with_items:
  - "{{ groups.nc }}"
  when:
  - not use_vlans
  - networking_mode == "MANAGED"
  tags:
  - initialization

- name: Authorize CC SSH Key
  authorized_key: user=root key="{{ lookup('file', '/var/tmp/cc-' + hostvars[inventory_hostname]['partition']) }}"
  tags:
  - initialization
  - clc_keys

- name: Start libvirtd
  service: name=libvirtd state=started
  tags:
  - nc_cleanup


- name: Delete default libvirt network
  shell: virsh net-destroy default ; virsh net-undefine default
  ignore_errors: yes
  tags:
  - initialization
  - nc_cleanup


- name: Restart libvirtd
  service: name=libvirtd state=restarted
  tags:
  - initialization
  - nc_cleanup
